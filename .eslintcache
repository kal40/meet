[{"/home/kal/repositories/meet/src/index.js":"1","/home/kal/repositories/meet/src/App.js":"2","/home/kal/repositories/meet/src/reportWebVitals.js":"3","/home/kal/repositories/meet/src/serviceWorkerRegistration.js":"4","/home/kal/repositories/meet/src/EventList.js":"5","/home/kal/repositories/meet/src/CitySearch.js":"6","/home/kal/repositories/meet/src/api.js":"7","/home/kal/repositories/meet/src/Event.js":"8","/home/kal/repositories/meet/src/mock-data.js":"9","/home/kal/repositories/meet/src/NumberOfEvents.js":"10","/home/kal/repositories/meet/src/Alert.js":"11","/home/kal/repositories/meet/src/WelcomeScreen.jsx":"12","/home/kal/repositories/meet/src/EventGenre.js":"13"},{"size":915,"mtime":1679407829258,"results":"14","hashOfConfig":"15"},{"size":4460,"mtime":1679578965509,"results":"16","hashOfConfig":"15"},{"size":364,"mtime":1676912402121,"results":"17","hashOfConfig":"15"},{"size":5064,"mtime":1676912402121,"results":"18","hashOfConfig":"15"},{"size":372,"mtime":1678702588915,"results":"19","hashOfConfig":"15"},{"size":2031,"mtime":1679478859881,"results":"20","hashOfConfig":"15"},{"size":3031,"mtime":1679494507533,"results":"21","hashOfConfig":"15"},{"size":1157,"mtime":1679303708539,"results":"22","hashOfConfig":"15"},{"size":168200,"mtime":1678965915317,"results":"23","hashOfConfig":"15"},{"size":1007,"mtime":1679576609339,"results":"24","hashOfConfig":"15"},{"size":724,"mtime":1679492034433,"results":"25","hashOfConfig":"15"},{"size":1126,"mtime":1679568228410,"results":"26","hashOfConfig":"15"},{"size":1230,"mtime":1679580576649,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"moat2w",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kal/repositories/meet/src/index.js",[],["56","57"],"/home/kal/repositories/meet/src/App.js",["58","59"],"import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./nprogress.css\";\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport EventGenre from \"./EventGenre\";\nimport { extractLocations, getEvents, checkToken, getAccessToken } from \"./api\";\nimport { WarningAlert } from \"./Alert\";\nimport WelcomeScreen from \"./WelcomeScreen\";\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    selectedLocation: \"all\",\n    numberOfEvents: 100,\n    offlineText: \"\",\n    showWelcomeScreen: undefined,\n  };\n\n  async componentDidMount() {\n    this.mounted = true;\n    const accessToken = localStorage.getItem(\"access_token\");\n    let isTokenValid;\n    if (\n      (accessToken && !navigator.onLine) ||\n      window.location.href.startsWith(\"http://localhost\")\n    ) {\n      isTokenValid = true;\n    } else {\n      isTokenValid = (await checkToken(accessToken)).error ? false : true;\n    }\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\n    if ((code || isTokenValid) && this.mounted) {\n      getEvents().then((events) => {\n        if (this.mounted) {\n          this.setState({\n            events: events.slice(0, this.state.numberOfEvents),\n            locations: extractLocations(events),\n          });\n        }\n      });\n    }\n    const handleNetworkStateChange = () => {\n      if (!navigator.onLine) {\n        this.setState({\n          offlineText:\n            \"The network is offline. During initial load or refresh the displayed list is loaded from the cache.\",\n        });\n      } else {\n        this.setState({\n          offlineText: \"\",\n        });\n      }\n    };\n\n    handleNetworkStateChange();\n    window.addEventListener(\"offline\", handleNetworkStateChange);\n    window.addEventListener(\"online\", handleNetworkStateChange);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (\n    location = this.state.selectedLocation,\n    eventCount = this.state.numberOfEvents\n  ) => {\n    getEvents().then((events) => {\n      const locationEvents =\n        location === \"all\"\n          ? events\n          : events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents.slice(0, eventCount),\n        numberOfEvents: eventCount,\n      });\n    });\n  };\n\n  getData = () => {\n    const { locations, events } = this.state;\n    const data = locations.map((location) => {\n      const number = events.filter(\n        (event) => event.location === location\n      ).length;\n      const city = location.split(\", \").shift();\n      return { city, number };\n    });\n    return data;\n  };\n  render() {\n    // if (this.state.showWelcomeScreen === undefined)\n    //   return <div className=\"App\" />;\n    return (\n      <div className=\"App\">\n        <h1>Welcome to Meet App</h1>\n        <h4>Choose your nearest city</h4>\n        <WarningAlert text={this.state.offlineText} />\n        <CitySearch\n          locations={this.state.locations}\n          updateEvents={this.updateEvents}\n        />\n        <NumberOfEvents\n          numberOfEvents={this.state.numberOfEvents}\n          updateEvents={this.updateEvents}\n        />\n        <h4>Events in each city</h4>\n        <div className=\"data-vis-wrapper\">\n          <EventGenre events={this.state.events} />\n          <ResponsiveContainer width=\"100%\" height={400}>\n            <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 0 }}>\n              <CartesianGrid />\n              <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\n              <YAxis\n                allowDecimals={false}\n                type=\"number\"\n                dataKey=\"number\"\n                name=\"number of events\"\n              />\n              <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n              <Scatter data={this.getData()} fill=\"#8884d8\" />\n            </ScatterChart>\n          </ResponsiveContainer>\n        </div>\n        <EventList events={this.state.events} />\n        {/* <WelcomeScreen\n          showWelcomeScreen={this.state.showWelcomeScreen}\n          getAccessToken={() => {\n            getAccessToken();\n          }}\n        /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/home/kal/repositories/meet/src/reportWebVitals.js",[],"/home/kal/repositories/meet/src/serviceWorkerRegistration.js",[],"/home/kal/repositories/meet/src/EventList.js",[],"/home/kal/repositories/meet/src/CitySearch.js",[],"/home/kal/repositories/meet/src/api.js",[],"/home/kal/repositories/meet/src/Event.js",[],"/home/kal/repositories/meet/src/mock-data.js",[],"/home/kal/repositories/meet/src/NumberOfEvents.js",[],"/home/kal/repositories/meet/src/Alert.js",[],"/home/kal/repositories/meet/src/WelcomeScreen.jsx",[],"/home/kal/repositories/meet/src/EventGenre.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":8,"column":51,"nodeType":"66","messageId":"67","endLine":8,"endColumn":65},{"ruleId":"64","severity":1,"message":"68","line":10,"column":8,"nodeType":"66","messageId":"67","endLine":10,"endColumn":21},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'getAccessToken' is defined but never used.","Identifier","unusedVar","'WelcomeScreen' is defined but never used.","no-global-assign","no-unsafe-negation"]