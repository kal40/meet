{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","collapsed","toggleDetails","setState","prevState","_createClass","key","value","event","this","props","_jsxs","className","children","_jsx","summary","start","dateTime","location","onClick","href","htmlLink","target","rel","description","Component","EventList","events","map","id","CitySearch","query","suggestions","handleInputChanged","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","_this2","type","onChange","mockData","kind","etag","status","created","updated","creator","email","self","organizer","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","extractLocations","_toConsumableArray","Set","getEvents","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","stop","App","then","locationEvents","mounted","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.2aae7174.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Event extends Component {\n  state = { collapsed: true };\n  toggleDetails = () => {\n    this.setState((prevState) => ({\n      collapsed: !prevState.collapsed,\n    }));\n  };\n\n  render() {\n    const { event } = this.props;\n    const { collapsed } = this.state;\n\n    return (\n      <div className=\"Event\">\n        <h2 className=\"summary\">{event.summary}</h2>\n        <p className=\"start\">{event.start.dateTime}</p>\n        <p className=\"location\">{`Location: ${event.location}`}</p>\n        <button className=\"details-button\" onClick={this.toggleDetails}>\n          {collapsed ? \"show\" : \"hide\"} details\n        </button>\n        {!collapsed && (\n          <div className=\"details\">\n            <h3 className=\"about\">About this event:</h3>\n            <a\n              className=\"link\"\n              href={event.htmlLink}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              See details on Google Calendar\n            </a>\n            <p className=\"description\">{event.description}</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Event;\n","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map(event => \n          <li key={event.id}>\n            <Event event={event} />\n        </li>  \n      )}\n    </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, { Component } from \"react\";\n\nclass CitySearch extends Component {\n  state = {\n    query: \"\",\n    suggestions: [],\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({\n      query: value,\n      suggestions,\n    });\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n    });\n\n    this.props.updateEvents(suggestion);\n  };\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n        />\n        <ul className=\"suggestions\">\n          {this.state.suggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;\n","const mockData = [\n  {\n    kind: \"calendar#event\",\n    etag: '\"3181161784712000\"',\n    id: \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    status: \"confirmed\",\n    htmlLink:\n      \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:17:46.000Z\",\n    updated: \"2020-05-27T12:01:32.356Z\",\n    summary: \"Learn JavaScript\",\n    description:\n      \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    location: \"London, UK\",\n    creator: { email: \"fullstackwebdev@careerfoundry.com\", self: true },\n    organizer: { email: \"fullstackwebdev@careerfoundry.com\", self: true },\n    start: { dateTime: \"2020-05-19T16:00:00+02:00\", timeZone: \"Europe/Berlin\" },\n    end: { dateTime: \"2020-05-19T17:00:00+02:00\", timeZone: \"Europe/Berlin\" },\n    recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\",\n    originalStartTime: {\n      dateTime: \"2020-05-19T16:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    sequence: 0,\n    reminders: { useDefault: true },\n    eventType: \"default\",\n  },\n  {\n    kind: \"calendar#event\",\n    etag: '\"3181159875584000\"',\n    id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    status: \"confirmed\",\n    htmlLink:\n      \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:14:30.000Z\",\n    updated: \"2020-05-27T11:45:37.792Z\",\n    summary: \"React is Fun\",\n    description:\n      \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    location: \"Berlin, Germany\",\n    creator: { email: \"fullstackwebdev@careerfoundry.com\", self: true },\n    organizer: { email: \"fullstackwebdev@careerfoundry.com\", self: true },\n    start: { dateTime: \"2020-05-20T14:00:00+02:00\", timeZone: \"Europe/Berlin\" },\n    end: { dateTime: \"2020-05-20T15:00:00+02:00\", timeZone: \"Europe/Berlin\" },\n    recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    originalStartTime: {\n      dateTime: \"2020-05-20T14:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    sequence: 0,\n    reminders: { useDefault: true },\n    eventType: \"default\",\n  },\n];\n\nexport { mockData };\n","import { mockData } from \"./mock-data\";\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nexport const getEvents = async () => {\n  return mockData;\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport { extractLocations, getEvents } from \"./api\";\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents =\n        location === \"all\"\n          ? events\n          : events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents,\n      });\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch\n          locations={this.state.locations}\n          updateEvents={this.updateEvents}\n        />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}